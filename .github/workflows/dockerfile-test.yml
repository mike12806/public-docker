name: docker-build-verification

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  dockerfile-discovery:
    name: Discover Dockerfiles
    runs-on: ubuntu-latest
    outputs:
      paths: ${{ steps.find-paths.outputs.paths }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Find Dockerfile paths
        id: find-paths
        run: |
          paths=$(find Dockerfiles Kafka-Connect -name Dockerfile -type f | jq -R -s -c 'split("\n")[:-1]')
          echo "paths=$paths" >> $GITHUB_OUTPUT

  test-docker-build:
    name: Build and Test Docker Images
    needs: dockerfile-discovery
    runs-on: ubuntu-latest
    strategy:
      matrix:
        dockerfile: ${{ fromJson(needs.dockerfile-discovery.outputs.paths) }}
      fail-fast: false
    permissions:
      contents: read
      pull-requests: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Get image name
        id: image-name
        run: |
          name=$(dirname ${{ matrix.dockerfile }} | tr '/' '-' | tr '[:upper:]' '[:lower:]')
          echo "name=$name" >> $GITHUB_OUTPUT

      - name: Get context path
        id: context-path
        run: |
          context_path=$(dirname "${{ matrix.dockerfile }}")
          echo "path=$context_path" >> $GITHUB_OUTPUT

      - name: Build Docker image
        uses: docker/build-push-action@v6
        with:
          context: ${{ github.workspace }}/${{ steps.context-path.outputs.path }}
          push: false
          load: true
          tags: test-${{ steps.image-name.outputs.name }}:${{ github.sha }}

      - name: Test container starts
        run: |
          # Test if container can run and execute basic commands
          if [[ "${{ matrix.dockerfile }}" == *"Runner"* ]]; then
            docker run --rm test-${{ steps.image-name.outputs.name }}:${{ github.sha }} python3 --version
          elif [[ "${{ matrix.dockerfile }}" == Kafka-Connect/* ]]; then
            docker run --rm test-${{ steps.image-name.outputs.name }}:${{ github.sha }} connect-distributed --version
          else
            docker run --rm test-${{ steps.image-name.outputs.name }}:${{ github.sha }} ls /
          fi
          if [ $? -ne 0 ]; then
            echo "Container failed to start properly"
            exit 1
          fi
