name: docker-build-verification

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  dockerfile-discovery:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v4

      - name: Find all Dockerfiles
        id: find-dockerfiles
        run: |
          files=$(find . -type f -iname Dockerfile)
          jq -n --arg files "$files" '$files | split("\n")[:-1]' > dockerfiles.json

      - name: Set matrix
        id: set-matrix
        run: |
          files=$(cat dockerfiles.json)
          echo "matrix={\"dockerfile\":$files}" >> $GITHUB_OUTPUT

  test-docker-build:
    needs: dockerfile-discovery
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.dockerfile-discovery.outputs.matrix) }}
    steps:
      - uses: actions/checkout@v4

      - uses: docker/setup-buildx-action@v3

      - name: Derive image name (safe for Docker tag)
        id: image-name
        run: |
          name=$(echo "${{ matrix.dockerfile }}" | sed 's|^\./||' | tr '/.' '-')
          echo "name=$name" >> $GITHUB_OUTPUT

      - name: Get build context
        id: context
        run: |
          context_path=$(dirname "${{ matrix.dockerfile }}")
          echo "context=$context_path" >> $GITHUB_OUTPUT

      - name: Build image
        uses: docker/build-push-action@v6
        with:
          context: ${{ github.workspace }}/${{ steps.context.outputs.context }}
          file: ${{ github.workspace }}/${{ matrix.dockerfile }}
          push: false
          load: true
          tags: test-${{ steps.image-name.outputs.name }}:${{ github.sha }}

      - name: Smoke test: container runs with default command
        run: |
          image_tag=test-${{ steps.image-name.outputs.name }}:${{ github.sha }}
          docker run --rm "$image_tag"
