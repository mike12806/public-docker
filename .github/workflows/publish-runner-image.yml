name: Build and Publish Runner Image

on:
  schedule:
    - cron: '0 14 * * *' # 2 PM UTC every day
  push:
    branches:
      - main
    paths:
      - 'Dockerfiles/Runner/Dockerfile'
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: gh_hdc-runner
  FULL_IMAGE_NAME: ${{ github.repository_owner }}/public-docker/gh_hdc-runner

jobs:
  release-please:
    runs-on: ubuntu-latest
    outputs:
      release_created: ${{ steps.release.outputs.release_created }}
      tag_name: ${{ steps.release.outputs.tag_name }}
    steps:
      - uses: google-github-actions/release-please-action@v4
        id: release
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          release-type: simple

  build-and-push:
    needs: release-please
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.FULL_IMAGE_NAME }}
          tags: |
            type=raw,value=latest
            type=raw,value=${{ needs.release-please.outputs.tag_name }}
            type=sha,format=long

      - name: Build and push Docker image
        id: build_push
        uses: docker/build-push-action@v6
        with:
          context: Dockerfiles/Runner
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache,new=true
          provenance: true
