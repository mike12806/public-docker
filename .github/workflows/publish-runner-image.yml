name: Build and Publish Docker Images

on:
  workflow_dispatch:
  schedule:
    - cron: '0 */4 * * *'  # every 4 hours
  push:
    branches: [main]
    paths:
      - 'Dockerfiles/**'

env:
  REGISTRY: ghcr.io

jobs:
  discover-dockerfiles:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v4

      - name: Discover Dockerfiles
        id: discover
        run: |
          files=$(find Dockerfiles -mindepth 2 -maxdepth 2 -name Dockerfile)
          jq -n --arg files "$files" '$files | split("\n") | map(select(. != ""))' > dockerfiles.json

      - name: Set matrix
        id: set-matrix
        run: |
          echo "matrix={\"dockerfile\":$(cat dockerfiles.json)}" >> $GITHUB_OUTPUT

  build-and-push:
    needs: discover-dockerfiles
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.discover-dockerfiles.outputs.matrix) }}
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Derive image name and context
        id: meta
        run: |
          context_path=$(dirname "${{ matrix.dockerfile }}")
          image_name=$(echo "$context_path" | sed 's|^Dockerfiles/||' | tr '/.' '-')
          if [[ -z "$image_name" ]]; then image_name="docker"; fi
          echo "context_path=$context_path" >> $GITHUB_OUTPUT
          echo "image_name=$image_name" >> $GITHUB_OUTPUT

      - name: Set tags
        id: tags
        run: |
          echo "tags=${{ env.REGISTRY }}/${{ github.repository_owner }}/public-docker/${{ steps.meta.outputs.image_name }}:latest,${{ env.REGISTRY }}/${{ github.repository_owner }}/public-docker/${{ steps.meta.outputs.image_name }}:${{ github.sha }}" >> $GITHUB_OUTPUT

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: "${{ steps.meta.outputs.context_path }}"
          file: "${{ matrix.dockerfile }}"
          push: true
          tags: "${{ steps.tags.outputs.tags }}"

      - name: Show Image Info
        run: echo "Image: ${{ steps.tags.outputs.tags }}"
